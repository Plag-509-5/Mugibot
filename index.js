// index.js
import connectToWhatsApp from './connection.js';
import loadCommands from './commandHandler.js';
import 'dotenv/config';
import { handleButtonResponse, handleDirectAnswer } from './commands/Aventure/quiz.js';
// Si tu as besoin d'acc√©der √† activeQuizzes pour une logique sp√©cifique dans index.js
import { activeQuizzes } from './commands/Aventure/quiz.js';

const prefix = process.env.PREFIX || '!';

async function startBot() {
    console.log("=========================================================================");
    console.log("üè¥‚Äç‚ò†Ô∏è‚öìÔ∏è Embarquement imm√©diat sur le MugiBot ! ‚öìÔ∏èüè¥‚Äç‚ò†Ô∏è");
    console.log("    D√©velopp√© avec passion ‚ù§Ô∏è par le Capitaine : Plag tech");
    console.log("-------------------------------------------------------------------------");
    console.log("üîß V√©rification des cartes et du mat√©riel (chargement des commandes)...");

    const commands = await loadCommands();
    console.log(`üó∫Ô∏è ${commands.size} tr√©sors (commandes) trouv√©s et charg√©s √† bord ! Pr√™t √† lever l'ancre !`);
    console.log("-------------------------------------------------------------------------");

    const sock = await connectToWhatsApp(async (currentSock) => {
        console.log("-------------------------------------------------------------------------");
        console.log("üìû L'escargophone principal est connect√© et op√©rationnel !");
        console.log("Le Mugibot est pr√™t √† recevoir vos ordres, Capitaine !");
        console.log("-------------------------------------------------------------------------");
        if (process.env.OWNER_NUMBER) {
           try {
               await currentSock.sendMessage(process.env.OWNER_NUMBER + '@s.whatsapp.net', { text: 'üåä MugiBot est en ligne et pr√™t pour l'aventure, Capitaine Plag tech !' });
           } catch (e) {
            console.warn("N'a pas pu envoyer le message de d√©marrage au propri√©taire. L'escargophone est peut-√™tre timide ?");
           }
        }
    });

    sock.ev.on('messages.upsert', async (m) => {
        const msg = m.messages[0];
        if (!msg.message || msg.key.fromMe || msg.key.remoteJid === 'status@broadcast') {
            return;
        }

        const messageType = Object.keys(msg.message)[0];

        // Gestion des r√©ponses aux boutons du quiz
        if (messageType === 'buttonsResponseMessage' && msg.message.buttonsResponseMessage.selectedButtonId?.startsWith('quiz_')) {
            try {
                await handleButtonResponse(sock, msg);
            } catch (error) {
                console.error("üè¥‚Äç‚ò†Ô∏è Erreur de boussole lors du traitement de la r√©ponse au bouton de quiz:", error);
            }
            return; 
        }
        
        let body = '';
        if (messageType === 'conversation') {
            body = msg.message.conversation;
        } else if (messageType === 'extendedTextMessage') {
            body = msg.message.extendedTextMessage.text;
        } else if (messageType === 'imageMessage' && msg.message.imageMessage.caption) {
            body = msg.message.imageMessage.caption;
        } else if (messageType === 'videoMessage' && msg.message.videoMessage.caption) {
            body = msg.message.videoMessage.caption;
        }

        if (body && body.startsWith(prefix)) {
            const args = body.slice(prefix.length).trim().split(/ +/);
            const commandName = args.shift().toLowerCase();

            const command = commands.get(commandName) || Array.from(commands.values()).find(cmd => cmd.aliases && cmd.aliases.includes(commandName));

            if (command) {
                try {
                    console.log(`‚ö° Ex√©cution de la commande: ${prefix}${commandName} par ${msg.pushName || msg.key.remoteJid}`);
                    await command.execute({ sock, msg, args, commands, prefix });
                } catch (error) {
                    console.error(`‚ùå Erreur lors de l'ex√©cution de ${prefix}${commandName}:`, error);
                    await sock.sendMessage(msg.key.remoteJid, { text: 'üè¥‚Äç‚ò†Ô∏è Oh non, Luffy a encore cass√© la boussole ! Une erreur est survenue √† bord.' }, { quoted: msg });
                }
            }
        }
    });
}

startBot().catch(err => {
    console.error("=========================================================================");
    console.error("‚ò†Ô∏è AVARIE MAJEURE AU D√âMARRAGE DU BOT ! V√©rifiez les journaux ! ‚ò†Ô∏è", err);
    console.error("=========================================================================");
    console.log("Le navire a rencontr√© une temp√™te inattendue... Reprise des op√©rations impossible pour le moment.");
});
